name: Manage environment
on:
  pull_request_target:
    branches: [main]
    types:
      - opened
      - reopened
      - closed

env:
  PLATFORMSH_CLI_NO_INTERACTION: 1
  PLATFORM_PROJECT: 652soceglkw4u
  PLATFORMSH_CLI_DEFAULT_TIMEOUT: 60 # Increase timeout for CLI commands

jobs:
  activate_environment:
    runs-on: ubuntu-latest
    # Activate when a PR is opened, but not for forks (handled through `build-from-fork` workflow)
    if: >-
      (github.event.action == 'opened' ||
      github.event.action== 'reopened') &&
      github.event.pull_request.head.repo.id == 21975579
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up workflow environment to use the Platform.sh CLI
      - name: Set up Platform.sh CLI
        uses: ./.github/actions/set-up-cli

      - env:
          PLATFORMSH_CLI_DEFAULT_TIMEOUT: 60 # Increase timeout for CLI commands
          PLATFORMSH_CLI_TOKEN: ${{ secrets.PLATFORMSH_CLI_TOKEN }}
        run: platform environment:activate --no-wait ${{ github.event.pull_request.head.ref }}

  deactivate_environment:
    runs-on: ubuntu-latest
    # For non-forked PRs
    # Deactivate when a PR is closed
    # Don't need to run on merges since the integration takes care of it
    if: >-
      github.event.action == 'closed' &&
      github.event.pull_request.merged == false &&
      github.event.pull_request.head.repo.id == 21975579
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up workflow environment to use the Platform.sh CLI
      - name: Set up Platform.sh CLI
        uses: ./.github/actions/set-up-cli

      - name: Close environment
        env:
          PLATFORMSH_CLI_TOKEN: ${{ secrets.PLATFORMSH_CLI_TOKEN }}
        run: platform environment:deactivate --no-delete-branch ${{ github.event.pull_request.head.ref }}

  deactivate_forked_environment:
    runs-on: ubuntu-latest
    env:
      BRANCH_TITLE: pr-${{ github.event.number }}
    # For forked PRs labelled as build-fork
    # Delete branch when a PR is closed
    if: >-
      github.event.action == 'closed' &&
      github.event.pull_request.head.repo.id != 21975579 &&
      contains(github.event.pull_request.labels.*.name, 'build-fork')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check if Git branch exists
        id: branch_exists
        env:
          PLATFORMSH_CLI_TOKEN: ${{ secrets.PLATFORMSH_CLI_TOKEN }}
        # Check if the Git branch exists
        run: |
          BRANCH=$(git ls-remote --heads origin $BRANCH_TITLE)
          echo $BRANCH

          if [[ -n $BRANCH ]]; then
            echo "branch_exists=true" >> $GITHUB_OUTPUT
          else
            echo "branch_exists=false" >> $GITHUB_OUTPUT
          fi

        # If the branch or environment exists, delete it from Platform.sh
      - name: Delete branch
        if: steps.branch_exists.outputs.branch_exists == 'true'
        env:
          PLATFORMSH_CLI_TOKEN: ${{ secrets.PLATFORMSH_CLI_TOKEN }}
        run: |
          git push origin -d pr-${{ github.event.number }}

        # Set up workflow environment to use the Platform.sh CLI
      - name: Set up Platform.sh CLI
        # If the Git branch was deleted, skip checks for the environment
        if: steps.branch_exists.outputs.branch_exists != 'true'
        uses: ./.github/actions/set-up-cli

      - name: Check if environment exists
        id: environment_exists
        if: steps.branch_exists.outputs.branch_exists != 'true'
        env:
          PLATFORMSH_CLI_TOKEN: ${{ secrets.PLATFORMSH_CLI_TOKEN }}
        # Check if the built environment exists
        run: |
          BRANCH=$(platform environments --pipe --columns title | grep $BRANCH_TITLE)

          if [[ -n $BRANCH ]]; then
            echo "environment_exists=true" >> $GITHUB_OUTPUT
          fi

        # If the branch or environment exists, delete it from Platform.sh
      - name: Delete environment
        if: steps.branch_exists.outputs.branch_exists != 'true' && steps.environment_exists.outputs.environment_exists == 'true'
        env:
          PLATFORMSH_CLI_TOKEN: ${{ secrets.PLATFORMSH_CLI_TOKEN }}
        run: |
          platform environment:delete --delete-branch --no-wait $BRANCH_TITLE
