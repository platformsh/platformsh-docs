- # The name of this application, which must be unique within a project.
    name: 'docs'

    # The type key specifies the language and version for your application.
    type: 'nodejs:20'

    # Specify the Hugo version as an env variable.
    variables:
        env:
            HUGOVERSION: 0.139.4
            SITE_DIR: 'sites/platform'

    build:
        flavor: none

    source:
        root: "/"

    relationships:
        search: "search:http"

    # The hooks that will be triggered when the package is deployed.
    hooks:
        # Build hooks can modify the application files on disk but not access any services like databases.
        build: |
          set -e
          cd $SITE_DIR
          cp ../../themes/psh-docs/postcss.config.js .
          npm install
          npm run build
          ./build_docs.sh

        deploy: |
            cd $SITE_DIR
            ./deploy.sh
            bash ./marker.sh "deployed" "${SITE_DIR}"
        post_deploy:
          cd $SITE_DIR && bash ./marker.sh "post_deploy" "${SITE_DIR}"

    # The configuration of the application when it is exposed to the web.
    web:
        commands:
        # Run (404) error
            start: cd $SITE_DIR && node index.js
        locations:
            '/':
                # The public directory of the application relative to its root.
                root: 'sites/platform/public'
                passthru: true
                index: ['index.html']
                scripts: false
                allow: true
                expires: 24h
                rules:
                    \.(css|js|gif|jpe?g|png|ttf|eot|woff2?|otf|cast|mp4|json|yaml|ico|svg?|cast|mp4|json|yaml|svg?|ttf)$:
                        expires: 4w
                    \.md$:
                      headers:
                        Content-Type: "text/markdown; charset=UTF-8"
                    \.txt$:
                      headers:
                        Content-Type: "text/plain; charset=UTF-8"
    disk: 1024

    mounts:
        "sites/platform/public/scripts/xss/dist/config":
            source: local
            source_path: "sites/platform/config"

    size: S

- # The name of this application, which must be unique within a project.
    name: 'upsun'

    # The type key specifies the language and version for your application.
    type: 'nodejs:20'

    # Specify the Hugo version as an env variable.
    variables:
        env:
            HUGOVERSION: 0.139.4
            SITE_DIR: 'sites/upsun'

    build:
        flavor: none

    source:
        root: "/"

    relationships:
        search: "search:http"

    # The hooks that will be triggered when the package is deployed.
    hooks:
        # Build hooks can modify the application files on disk but not access any services like databases.
        build: |
          cd $SITE_DIR
          cp ../../themes/psh-docs/postcss.config.js .
          npm install
          npm run build
          ./build_docs.sh
          # temporary generation of json version of public regions + ip addresses
          # if this is still here after 20250621 ping @gilzow and ask why
          cat "${PLATFORM_APP_DIR}/shared/data/regions.yaml" | python3 -c 'import sys,yaml,json; print(json.dumps(yaml.safe_load(str(sys.stdin.read()))))' | jq '[.. | objects | .outbound_ips? // empty] | add' > "${PLATFORM_APP_DIR}/${SITE_DIR}/public/outbound_ips.json"

        deploy: |
            cd $SITE_DIR
            ./deploy.sh
            bash ./marker.sh "deployed" "${SITE_DIR}"
        post_deploy:
          cd $SITE_DIR && bash ./marker.sh "post_deploy" "${SITE_DIR}"
    # The configuration of the application when it is exposed to the web.
    web:
        commands:
        # Run (404) error
            start: cd $SITE_DIR && node index.js
        locations:
            '/':
                # The public directory of the application relative to its root.
                root: 'sites/upsun/public'
                passthru: true
                index: ['index.html']
                scripts: false
                allow: true
                expires: 24h
                rules:
                    \.(css|js|gif|jpe?g|png|ttf|eot|woff2?|otf|cast|mp4|json|yaml|ico|svg?|cast|mp4|json|yaml|svg?|ttf)$:
                        expires: 4w
                    \.md$:
                      headers:
                        Content-Type: "text/markdown; charset=UTF-8"
                    \.txt$:
                      headers:
                        Content-Type: "text/plain; charset=UTF-8"

    disk: 1024

    mounts:
        "sites/upsun/public/scripts/xss/dist/config":
            source: local
            source_path: "sites/upsun/config"

    size: S
-
  name: redirectionio-upsun
  source:
    root: upsun-redirectionio
  type: golang:1.15
  hooks:
    build: |
      set -ex
      curl -s -J -L "https://packages.redirection.io/dist/stable/2/any/redirectionio-agent-latest_any_amd64.tar.gz" | tar -C /app/ -xzpf -
  web:
    upstream:
      socket_family: tcp
      protocol: http
    commands:
      start: |
        set -ex
        /app/redirection-agent/redirectionio-agent -config-file ./agent.yaml
    locations:
      /:
        allow: false
        passthru: true
  relationships:
    app: "upsun:http"
  disk: 256
  mounts:
    # rules will be saved locally in this folder
    'rules':
      source: local
      source_path: rules
    # redirection.io log folder
    'log':
      source: local
      source_path: log

-
  name: redirectionio-psh
  source:
    root: psh-redirectionio
  type: golang:1.15
  hooks:
    build: |
      set -ex
      curl -s -J -L "https://packages.redirection.io/dist/stable/2/any/redirectionio-agent-latest_any_amd64.tar.gz" | tar -C /app/ -xzpf -
  web:
    upstream:
      socket_family: tcp
      protocol: http
    commands:
      start: |
        set -ex
        /app/redirection-agent/redirectionio-agent -config-file ./agent.yaml
    locations:
      /:
        allow: false
        passthru: true
  relationships:
    app: "docs:http"
  disk: 256
  mounts:
    # rules will be saved locally in this folder
    'rules':
      source: local
      source_path: rules
    # redirection.io log folder
    'log':
      source: local
      source_path: log
