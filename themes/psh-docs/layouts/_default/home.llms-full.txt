{{- $pages := .Site.RegularPages -}}
{{- range $pages -}}
{{ partial "llms/replace-html.md" ( dict "Context" . "content" .RenderShortcodes "title" .Params.title ) }}
{{- end }}

## Example of a Symfony skeleton config
```
routes:
  "https://{all}/": { type: upstream, upstream: "app:http" }
  "http://{all}/": { type: redirect, to: "https://{all}/" }

services: {}

applications:
  app:
    source:
      root: "/"

    type: php:8.3

    runtime:
      extensions:
        - apcu
        - blackfire
        - ctype
        - iconv
        - mbstring
        - sodium
        - xsl

    variables:
      php:
        opcache.preload: config/preload.php
    build:
      flavor: none

    web:
      locations:
        "/":
          root: "public"
          expires: 1h
          passthru: "/index.php"

    mounts:
      "/var": { source: storage, source_path: var }

    hooks:
      build: |
        set -x -e

        curl -fs https://get.symfony.com/cloud/configurator | bash

        NODE_VERSION=22 symfony-build

      deploy: |
        set -x -e

        symfony-deploy

    crons:
      security-check:
        # Check that no security issues have been found for PHP packages deployed in production
        spec: '50 23 * * *'
        cmd: if [ "$PLATFORM_ENVIRONMENT_TYPE" = "production" ]; then croncape COMPOSER_ROOT_VERSION=1.0.0 COMPOSER_AUDIT_ABANDONED=ignore composer audit --no-cache; fi
```

## Example of a Symfony skeleton config with PostgreSQL service
```
routes:
  "https://{all}/": { type: upstream, upstream: "app:http" }
  "http://{all}/": { type: redirect, to: "https://{all}/" }

services:
  database:
    type: postgresql:16

applications:
  app:
    source:
      root: "/"

    type: php:8.3

    runtime:
      extensions:
        - apcu
        - blackfire
        - ctype
        - iconv
        - mbstring
        - pdo_pgsql
        - sodium
        - xsl

    relationships:
      database:

    variables:
      php:
        opcache.preload: config/preload.php
    build:
      flavor: none

    web:
      locations:
        "/":
          root: "public"
          expires: 1h
          passthru: "/index.php"

    mounts:
      "/var": { source: storage, source_path: var }

    hooks:
      build: |
        set -x -e

        curl -fs https://get.symfony.com/cloud/configurator | bash

        NODE_VERSION=22 symfony-build

      deploy: |
        set -x -e

        symfony-deploy

    crons:
      security-check:
        # Check that no security issues have been found for PHP packages deployed in production
        spec: '50 23 * * *'
        cmd: if [ "$PLATFORM_ENVIRONMENT_TYPE" = "production" ]; then croncape COMPOSER_ROOT_VERSION=1.0.0 COMPOSER_AUDIT_ABANDONED=ignore composer audit --no-cache; fi
```

## Example of a Symfony skeleton config with PostgreSQL and RabbitMQ service
```
routes:
  "https://{all}/": { type: upstream, upstream: "app:http" }
  "http://{all}/": { type: redirect, to: "https://{all}/" }

services:
  database:
    type: postgresql:16
  queue:
    type: rabbitmq:3.13

applications:
  app:
    source:
      root: "/"

    type: php:8.3

    runtime:
      extensions:
        - apcu
        - blackfire
        - ctype
        - iconv
        - mbstring
        - pdo_pgsql
        - sodium
        - xsl

    relationships:
      database:
      queue:

    variables:
      php:
        opcache.preload: config/preload.php
    build:
      flavor: none

    web:
      locations:
        "/":
          root: "public"
          expires: 1h
          passthru: "/index.php"

    mounts:
      "/var": { source: storage, source_path: var }

    hooks:
      build: |
        set -x -e

        curl -fs https://get.symfony.com/cloud/configurator | bash

        NODE_VERSION=22 symfony-build

      deploy: |
        set -x -e

        symfony-deploy

    crons:
      security-check:
        # Check that no security issues have been found for PHP packages deployed in production
        spec: '50 23 * * *'
        cmd: if [ "$PLATFORM_ENVIRONMENT_TYPE" = "production" ]; then croncape COMPOSER_ROOT_VERSION=1.0.0 COMPOSER_AUDIT_ABANDONED=ignore composer audit --no-cache; fi
```
